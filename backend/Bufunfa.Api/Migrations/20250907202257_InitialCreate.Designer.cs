// <auto-generated />
using System;
using Bufunfa.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Bufunfa.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250907202257_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Bufunfa.Api.Models.AccountRelationship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativa")
                        .HasColumnType("boolean");

                    b.Property<int>("ContaDestinoId")
                        .HasColumnType("integer");

                    b.Property<int>("ContaOrigemId")
                        .HasColumnType("integer");

                    b.Property<int>("CriadoPorUsuarioId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataDesativacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TipoRelacionamento")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContaDestinoId");

                    b.HasIndex("CriadoPorUsuarioId");

                    b.HasIndex("ContaOrigemId", "ContaDestinoId", "TipoRelacionamento")
                        .IsUnique()
                        .HasDatabaseName("IX_AccountRelationship_Origem_Destino_Tipo");

                    b.ToTable("AccountRelationships");
                });

            modelBuilder.Entity("Bufunfa.Api.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativa")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorProvisionadoMensal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Bufunfa.Api.Models.Conta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativa")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<decimal>("SaldoAtual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoInicial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Contas");

                    b.HasDiscriminator<int>("Tipo");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Bufunfa.Api.Models.ContaUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<int>("ContaId")
                        .HasColumnType("integer");

                    b.Property<int?>("ConvidadoPorUsuarioId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DataConvite")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataDesvinculacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataVinculacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("EhAdministrador")
                        .HasColumnType("boolean");

                    b.Property<bool>("EhProprietario")
                        .HasColumnType("boolean");

                    b.Property<int>("NivelPermissao")
                        .HasColumnType("integer");

                    b.Property<decimal>("PercentualParticipacao")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ConvidadoPorUsuarioId");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("ContaId", "UsuarioId")
                        .IsUnique()
                        .HasDatabaseName("IX_ContaUsuario_Conta_Usuario");

                    b.ToTable("ContaUsuarios");
                });

            modelBuilder.Entity("Bufunfa.Api.Models.FolhaMensal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("integer");

                    b.Property<int>("ContaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("DataFechamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Fechada")
                        .HasColumnType("boolean");

                    b.Property<int>("Mes")
                        .HasColumnType("integer");

                    b.Property<int?>("MonthlySheetStatusId")
                        .HasColumnType("integer");

                    b.Property<decimal>("SaldoFinalProvisionado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoFinalReal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoInicialProvisionado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoInicialReal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDespesasProvisionadas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDespesasReais")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalReceitasProvisionadas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalReceitasReais")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContaId");

                    b.HasIndex("MonthlySheetStatusId");

                    b.HasIndex("UsuarioId", "ContaId", "Ano", "Mes")
                        .IsUnique()
                        .HasDatabaseName("IX_FolhaMensal_Usuario_Conta_Ano_Mes");

                    b.ToTable("FolhasMensais");
                });

            modelBuilder.Entity("Bufunfa.Api.Models.Lancamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("AjustarDiaUtil")
                        .HasColumnType("boolean");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("integer");

                    b.Property<int>("ContaId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("DataFinal")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataInicial")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("DiaVencimento")
                        .HasColumnType("integer");

                    b.Property<int?>("IntervaloDias")
                        .HasColumnType("integer");

                    b.Property<int?>("ParcelaAtual")
                        .HasColumnType("integer");

                    b.Property<bool>("ProcessarRetroativo")
                        .HasColumnType("boolean");

                    b.Property<int?>("QuantidadeParcelas")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.Property<int?>("TipoPeriodicidade")
                        .HasColumnType("integer");

                    b.Property<int>("TipoRecorrencia")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UltimaDataProcessamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorProvisionado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorReal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ContaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Lancamentos");

                    b.HasDiscriminator<int>("TipoRecorrencia");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Bufunfa.Api.Models.LancamentoFolha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("DataPrevista")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataRealizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("FolhaMensalId")
                        .HasColumnType("integer");

                    b.Property<int>("LancamentoOrigemId")
                        .HasColumnType("integer");

                    b.Property<int?>("ParcelaAtual")
                        .HasColumnType("integer");

                    b.Property<bool>("Realizado")
                        .HasColumnType("boolean");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.Property<int>("TipoRecorrencia")
                        .HasColumnType("integer");

                    b.Property<int?>("TotalParcelas")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorProvisionado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorReal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("FolhaMensalId");

                    b.HasIndex("LancamentoOrigemId");

                    b.ToTable("LancamentosFolha");
                });

            modelBuilder.Entity("Bufunfa.Api.Models.MonthlySheetStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("integer");

                    b.Property<int>("ContaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataFechamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataReabertura")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Mes")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioResponsavelId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioResponsavelId");

                    b.HasIndex("ContaId", "Ano", "Mes")
                        .IsUnique()
                        .HasDatabaseName("IX_MonthlySheetStatus_Conta_Ano_Mes");

                    b.ToTable("MonthlySheetStatuses");
                });

            modelBuilder.Entity("Bufunfa.Api.Models.Rateio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ContaConjuntaId")
                        .HasColumnType("integer");

                    b.Property<decimal>("PercentualRateio")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContaConjuntaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Rateios");
                });

            modelBuilder.Entity("Bufunfa.Api.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("DataUltimaAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("GoogleId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Bufunfa.Api.Services.GastoRealMercado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProvisionamentoMercadoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProvisionamentoMercadoId");

                    b.ToTable("GastosReaisMercado");
                });

            modelBuilder.Entity("Bufunfa.Api.Services.ProvisionamentoMercado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("integer");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("integer");

                    b.Property<int>("ContaId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("Mes")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorGastoReal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorProvisionado")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ContaId");

                    b.HasIndex("UsuarioId", "ContaId", "CategoriaId", "Ano", "Mes")
                        .IsUnique()
                        .HasDatabaseName("IX_ProvisionamentoMercado_Usuario_Conta_Categoria_Ano_Mes");

                    b.ToTable("ProvisionamentosMercado");
                });

            modelBuilder.Entity("Bufunfa.Api.Models.ContaCartaoCredito", b =>
                {
                    b.HasBaseType("Bufunfa.Api.Models.Conta");

                    b.Property<string>("Bandeira")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("ContaCorrenteResponsavelId")
                        .HasColumnType("integer");

                    b.Property<int>("DiaFechamento")
                        .HasColumnType("integer");

                    b.Property<int>("DiaVencimento")
                        .HasColumnType("integer");

                    b.Property<decimal>("LimiteCredito")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NomeImpresso")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<decimal?>("TaxaJurosRotativo")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("TaxaMultaAtraso")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("UltimosDigitos")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.HasIndex("ContaCorrenteResponsavelId");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("Bufunfa.Api.Models.ContaConjunta", b =>
                {
                    b.HasBaseType("Bufunfa.Api.Models.Conta");

                    b.Property<DateTime?>("DataUltimaApuracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DiaApuracao")
                        .HasColumnType("integer");

                    b.Property<bool>("EmApuracao")
                        .HasColumnType("boolean");

                    b.Property<bool>("ManterSaldoPositivo")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("ValorUltimaApuracao")
                        .HasColumnType("decimal(18,2)");

                    b.HasDiscriminator().HasValue(4);
                });

            modelBuilder.Entity("Bufunfa.Api.Models.ContaCorrente", b =>
                {
                    b.HasBaseType("Bufunfa.Api.Models.Conta");

                    b.Property<decimal?>("LimiteChequeEspecial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NomeBanco")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("NumeroAgencia")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("NumeroConta")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal?>("TaxaJurosChequeEspecial")
                        .HasColumnType("decimal(5,2)");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Bufunfa.Api.Models.ContaInvestimento", b =>
                {
                    b.HasBaseType("Bufunfa.Api.Models.Conta");

                    b.Property<string>("CodigoAtivo")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("DataUltimaAtualizacaoValor")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataVencimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InstituicaoFinanceira")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("PermiteResgateParcial")
                        .HasColumnType("boolean");

                    b.Property<int?>("PrazoCarenciaDias")
                        .HasColumnType("integer");

                    b.Property<decimal?>("TaxaRentabilidadeEsperada")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("TipoInvestimento")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorAtualInvestimento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorInvestidoInicial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorMinimoResgate")
                        .HasColumnType("decimal(18,2)");

                    b.HasDiscriminator().HasValue(5);
                });

            modelBuilder.Entity("Bufunfa.Api.Models.ContaPoupanca", b =>
                {
                    b.HasBaseType("Bufunfa.Api.Models.Conta");

                    b.Property<int?>("DiaAniversario")
                        .HasColumnType("integer");

                    b.Property<string>("NomeBanco")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("NumeroAgencia")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("NumeroConta")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal?>("TaxaRendimentoMensal")
                        .HasColumnType("decimal(5,4)");

                    b.Property<decimal?>("ValorMinimoManutencao")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable("Contas", t =>
                        {
                            t.Property("NomeBanco")
                                .HasColumnName("ContaPoupanca_NomeBanco");

                            t.Property("NumeroAgencia")
                                .HasColumnName("ContaPoupanca_NumeroAgencia");

                            t.Property("NumeroConta")
                                .HasColumnName("ContaPoupanca_NumeroConta");
                        });

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("Bufunfa.Api.Models.LancamentoEsporadico", b =>
                {
                    b.HasBaseType("Bufunfa.Api.Models.Lancamento");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Bufunfa.Api.Models.LancamentoParcelado", b =>
                {
                    b.HasBaseType("Bufunfa.Api.Models.Lancamento");

                    b.Property<bool>("PermiteAlteracaoValorParcela")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("ValorParcela")
                        .HasColumnType("decimal(18,2)");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("Bufunfa.Api.Models.LancamentoRecorrente", b =>
                {
                    b.HasBaseType("Bufunfa.Api.Models.Lancamento");

                    b.Property<int?>("DiaDaSemana")
                        .HasColumnType("integer");

                    b.Property<int?>("DiaDoAno")
                        .HasColumnType("integer");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("Bufunfa.Api.Models.AccountRelationship", b =>
                {
                    b.HasOne("Bufunfa.Api.Models.Conta", "ContaDestino")
                        .WithMany("RelacionamentosDestino")
                        .HasForeignKey("ContaDestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bufunfa.Api.Models.Conta", "ContaOrigem")
                        .WithMany("RelacionamentosOrigem")
                        .HasForeignKey("ContaOrigemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bufunfa.Api.Models.Usuario", "CriadoPorUsuario")
                        .WithMany()
                        .HasForeignKey("CriadoPorUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContaDestino");

                    b.Navigation("ContaOrigem");

                    b.Navigation("CriadoPorUsuario");
                });

            modelBuilder.Entity("Bufunfa.Api.Models.Categoria", b =>
                {
                    b.HasOne("Bufunfa.Api.Models.Usuario", "Usuario")
                        .WithMany("Categorias")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Bufunfa.Api.Models.ContaUsuario", b =>
                {
                    b.HasOne("Bufunfa.Api.Models.Conta", "Conta")
                        .WithMany("ContaUsuarios")
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bufunfa.Api.Models.Usuario", "ConvidadoPorUsuario")
                        .WithMany()
                        .HasForeignKey("ConvidadoPorUsuarioId");

                    b.HasOne("Bufunfa.Api.Models.Usuario", "Usuario")
                        .WithMany("ContaUsuarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conta");

                    b.Navigation("ConvidadoPorUsuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Bufunfa.Api.Models.FolhaMensal", b =>
                {
                    b.HasOne("Bufunfa.Api.Models.Conta", "Conta")
                        .WithMany("FolhasMensais")
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bufunfa.Api.Models.MonthlySheetStatus", "MonthlySheetStatus")
                        .WithMany()
                        .HasForeignKey("MonthlySheetStatusId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Bufunfa.Api.Models.Usuario", "Usuario")
                        .WithMany("FolhasMensais")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conta");

                    b.Navigation("MonthlySheetStatus");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Bufunfa.Api.Models.Lancamento", b =>
                {
                    b.HasOne("Bufunfa.Api.Models.Categoria", "Categoria")
                        .WithMany("Lancamentos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Bufunfa.Api.Models.Conta", "Conta")
                        .WithMany("Lancamentos")
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bufunfa.Api.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Conta");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Bufunfa.Api.Models.LancamentoFolha", b =>
                {
                    b.HasOne("Bufunfa.Api.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId");

                    b.HasOne("Bufunfa.Api.Models.FolhaMensal", "FolhaMensal")
                        .WithMany("LancamentosFolha")
                        .HasForeignKey("FolhaMensalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bufunfa.Api.Models.Lancamento", "LancamentoOrigem")
                        .WithMany("LancamentosFolha")
                        .HasForeignKey("LancamentoOrigemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("FolhaMensal");

                    b.Navigation("LancamentoOrigem");
                });

            modelBuilder.Entity("Bufunfa.Api.Models.MonthlySheetStatus", b =>
                {
                    b.HasOne("Bufunfa.Api.Models.Conta", "Conta")
                        .WithMany("MonthlySheetStatuses")
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bufunfa.Api.Models.Usuario", "UsuarioResponsavel")
                        .WithMany()
                        .HasForeignKey("UsuarioResponsavelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Conta");

                    b.Navigation("UsuarioResponsavel");
                });

            modelBuilder.Entity("Bufunfa.Api.Models.Rateio", b =>
                {
                    b.HasOne("Bufunfa.Api.Models.ContaConjunta", "ContaConjunta")
                        .WithMany()
                        .HasForeignKey("ContaConjuntaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bufunfa.Api.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContaConjunta");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Bufunfa.Api.Services.GastoRealMercado", b =>
                {
                    b.HasOne("Bufunfa.Api.Services.ProvisionamentoMercado", "ProvisionamentoMercado")
                        .WithMany("GastosReais")
                        .HasForeignKey("ProvisionamentoMercadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProvisionamentoMercado");
                });

            modelBuilder.Entity("Bufunfa.Api.Services.ProvisionamentoMercado", b =>
                {
                    b.HasOne("Bufunfa.Api.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bufunfa.Api.Models.Conta", "Conta")
                        .WithMany()
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bufunfa.Api.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Conta");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Bufunfa.Api.Models.ContaCartaoCredito", b =>
                {
                    b.HasOne("Bufunfa.Api.Models.ContaCorrente", "ContaCorrenteResponsavel")
                        .WithMany("CartoesCredito")
                        .HasForeignKey("ContaCorrenteResponsavelId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ContaCorrenteResponsavel");
                });

            modelBuilder.Entity("Bufunfa.Api.Models.Categoria", b =>
                {
                    b.Navigation("Lancamentos");
                });

            modelBuilder.Entity("Bufunfa.Api.Models.Conta", b =>
                {
                    b.Navigation("ContaUsuarios");

                    b.Navigation("FolhasMensais");

                    b.Navigation("Lancamentos");

                    b.Navigation("MonthlySheetStatuses");

                    b.Navigation("RelacionamentosDestino");

                    b.Navigation("RelacionamentosOrigem");
                });

            modelBuilder.Entity("Bufunfa.Api.Models.FolhaMensal", b =>
                {
                    b.Navigation("LancamentosFolha");
                });

            modelBuilder.Entity("Bufunfa.Api.Models.Lancamento", b =>
                {
                    b.Navigation("LancamentosFolha");
                });

            modelBuilder.Entity("Bufunfa.Api.Models.Usuario", b =>
                {
                    b.Navigation("Categorias");

                    b.Navigation("ContaUsuarios");

                    b.Navigation("FolhasMensais");
                });

            modelBuilder.Entity("Bufunfa.Api.Services.ProvisionamentoMercado", b =>
                {
                    b.Navigation("GastosReais");
                });

            modelBuilder.Entity("Bufunfa.Api.Models.ContaCorrente", b =>
                {
                    b.Navigation("CartoesCredito");
                });
#pragma warning restore 612, 618
        }
    }
}
